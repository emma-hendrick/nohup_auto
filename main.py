import subprocess
import sys

def subprocess_result(args):
    result = subprocess.run(args, capture_output = True, text = True)
    return result.stdout.strip()

# Yayyyyy nohup, hopefully this tool can actually be helpful
if __name__ == "__main__":
    subcommand = sys.argv[1]

    # Run the subcommand, the first argument to the program
    # Start the process!
    if subcommand == "start":
        # Get the start command to use from nohup.start.script
        command = subprocess_result(["cat", "nohup.start.script"])
        
        # Start the process in the background
        subprocess.run(f"nohup {command} > nohup.auto.log & echo $! > nohup.pid", shell=True)

    # Kill the process!
    elif subcommand == "kill":

        # Get the pid from nohup.pid
        subprocess.run(["touch", "nohup.pid"])
        pid = subprocess_result(["cat", "nohup.pid"])

        # Kill the process with the pid in the nohup.pid
        subprocess.run(["kill", pid])
        subprocess.run(["rm", "nohup.pid"])
        subprocess.run(["rm", "nohup.auto.log"])

    # Print the process status!
    elif subcommand == "status":
        log = subprocess_result(["cat", "nohup.auto.log"])

        # Print the log
        print(log)

    # Update gitignore to ignore the files generated by this
    elif subcommand == "gitignoreupdate":

        # Get the current gitignore
        subprocess.run(["touch", ".gitignore"])
        ignore_file = subprocess_result(["cat", ".gitignore"])

        # Add each line its missing
        lines_needed = ["*.pid", "*.log", "nohup.start.script"]
        for item in lines_needed:
            if item not in ignore_file:
                subprocess.run(f"echo \"{item}\" >> .gitignore", shell=True)

    # Someone was being annoying and gave us an invalid command
    else:
        print(f"Argument {subcommand} not recognized; valid commands are start, kill, status, gitignoreupdate; get good scrub :)")

# If someone tries to import this ask them to stop lmao
else:
    print("Why u importing this, its not made for thatttttttttt, just use the standaloneeeeeeeee...")
